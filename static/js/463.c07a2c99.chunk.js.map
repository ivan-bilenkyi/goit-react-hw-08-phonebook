{"version":3,"file":"static/js/463.c07a2c99.chunk.js","mappings":"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","sources":["components/Contacts/ContactList.styled.js","components/ContactsFilter/ContactsFilter.js","redux/contacts/selectors.js","components/Contacts/ContactList.js","components/PhonebookForm/PhonebookForm.styled.js","components/PhonebookForm/PhonebookForm.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  max-width: 320px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 4px;\n  font-style: inherit;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: row;\n  gap: 8px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: auto;\n  width: 50px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Input } from '../Contacts/ContactList.styled';\nimport { getFilter, setFilter } from '../../redux/contacts/filterSlice';\n\nexport const ContactFilter = () => {\n  const dispatch = useDispatch();\n  const filterPhoneBook = useSelector(getFilter);\n\n  const onChangeFilter = event => {\n    const { value } = event.currentTarget;\n    const query = value.trim();\n    dispatch(setFilter(query));\n  };\n  return (\n    <div>\n      <Input\n        type=\"text\"\n        value={filterPhoneBook}\n        onChange={onChangeFilter}\n        placeholder=\"find contact\"\n      ></Input>\n    </div>\n  );\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectAllContacts = state => state.contacts.items;\nexport const filter = state => state.filter.status;\n\nexport const selectVisibleContacts = createSelector(\n  [selectAllContacts, filter],\n  (contacts, filter) => {\n    return contacts?.filter(el => {\n      return el.name.toLowerCase().includes(filter.toLowerCase());\n    });\n  }\n);\n","import { AiOutlineUserDelete } from 'react-icons/ai';\nimport { Button, Item, List, Wrap } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeContact } from '../../redux/contacts/operations';\nimport { ContactFilter } from 'components/ContactsFilter/ContactsFilter';\nimport { selectVisibleContacts } from '../../redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <Wrap>\n      <ContactFilter />\n      <List>\n        {contacts.map(item => {\n          return (\n            <Item key={item.id}>\n              {item.name}: <span>{item.phone}</span>\n              <Button onClick={() => dispatch(removeContact(item.id))}>\n                <AiOutlineUserDelete />\n              </Button>\n            </Item>\n          );\n        })}\n      </List>\n    </Wrap>\n  );\n};\n","import {\n  Form as FormikForm,\n  Field as FormikField,\n  ErrorMessage as FormikError,\n} from 'formik';\nimport styled from 'styled-components';\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  max-width: 320px;\n`;\n\nexport const Field = styled(FormikField)`\n  padding: 4px;\n  font-style: inherit;\n`;\n\nexport const FormGroup = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  color: red;\n  font-size: 14px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 30px;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AiOutlineUserAdd } from 'react-icons/ai';\n\nimport {\n  Form,\n  Field,\n  FormGroup,\n  ErrorMessage,\n  Button,\n} from './PhonebookForm.styled';\nimport { addContact } from '../../redux/contacts/operations';\nimport toast from 'react-hot-toast';\n\nconst SignupSchema = Yup.object().shape({\n  name: Yup.string().required('Required'),\n  number: Yup.string().required('Required'),\n});\n\nexport const PhonebookForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items);\n  const checkNewContact = newContact => {\n    const duplicate = contacts.some(\n      contact =>\n        contact.name.toLowerCase().trim() ===\n        newContact.name.toLowerCase().trim()\n    );\n    if (duplicate) {\n      return toast.error(`${newContact.name} is already in contacts`);\n    }\n    dispatch(addContact(newContact));\n  };\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Formik\n        initialValues={{\n          name: '',\n          number: '',\n        }}\n        validationSchema={SignupSchema}\n        onSubmit={(values, actions) => {\n          checkNewContact(values);\n          actions.resetForm();\n        }}\n      >\n        <Form>\n          <FormGroup>\n            Name\n            <Field name=\"name\" />\n            <ErrorMessage name=\"name\" component=\"span\" />\n          </FormGroup>\n\n          <FormGroup>\n            Number\n            <Field name=\"number\" />\n            <ErrorMessage name=\"number\" component=\"span\" />\n          </FormGroup>\n\n          <Button type=\"submit\">\n            <AiOutlineUserAdd />\n          </Button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n","import { ContactList } from 'components/Contacts/ContactList';\nimport { PhonebookForm } from 'components/PhonebookForm/PhonebookForm';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from '../redux/contacts/operations';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <div>\n      <PhonebookForm />\n      <div>\n        <h2>Contacts</h2>\n        <ContactList />\n      </div>\n    </div>\n  );\n}\n"],"names":["Wrap","styled","_templateObject","_taggedTemplateLiteral","Input","_templateObject2","List","_templateObject3","Item","_templateObject4","Button","_templateObject5","ContactFilter","dispatch","useDispatch","filterPhoneBook","useSelector","getFilter","_jsx","children","type","value","onChange","event","query","currentTarget","trim","setFilter","placeholder","selectVisibleContacts","createSelector","state","contacts","items","filter","status","el","name","toLowerCase","includes","ContactList","_jsxs","map","item","phone","onClick","removeContact","id","AiOutlineUserDelete","Form","FormikForm","Field","FormikField","FormGroup","ErrorMessage","FormikError","SignupSchema","Yup","shape","required","number","PhonebookForm","Formik","initialValues","validationSchema","onSubmit","values","actions","newContact","some","contact","toast","concat","addContact","checkNewContact","resetForm","component","AiOutlineUserAdd","Contacts","useEffect","fetchContacts"],"sourceRoot":""}